#!/usr/bin/env bash
# Check if python have dynamic library. If not - use gdb without-python

GDB_WRAPPER_BIN_DIR="$(cd "$(dirname "$0")"; pwd)"
GDB_WRAPPER_PYTHON_VERSION=$(python3 -c 'import sys; import sysconfig; print("{}.{}".format(sys.version_info.major, sys.version_info.minor)) if sysconfig.get_config_var("INSTSONAME").split(".")[-1] != "a" else exit(1)' 2> /dev/null)
GDB_WRAPPER_LIB_DIR=$(python3 -c 'import sys; import sysconfig; print(sysconfig.get_config_var("LIBDIR"))' 2> /dev/null)
GDB_WRAPPER_BIN_WITH_PYTHON_PATH="$GDB_WRAPPER_BIN_DIR/xtensa-esp-elf-gdb-$GDB_WRAPPER_PYTHON_VERSION"

if [[ -n "${GDB_WRAPPER_PYTHON_VERSION}" ]]; then
  if [[ -x "${GDB_WRAPPER_BIN_WITH_PYTHON_PATH}" ]]; then
    export LD_LIBRARY_PATH="${GDB_WRAPPER_LIB_DIR}:$LD_LIBRARY_PATH"
    echo "Run with python-${GDB_WRAPPER_PYTHON_VERSION}"
    "${GDB_WRAPPER_BIN_WITH_PYTHON_PATH}" --mcpu=TARGET_CHIP "$@"
    exit $?
  else
    echo -n "Python-${GDB_WRAPPER_PYTHON_VERSION} is not supported. "
  fi
fi

echo "Run without python"
"$GDB_WRAPPER_BIN_DIR/xtensa-esp-elf-gdb" --mcpu=TARGET_CHIP "$@"
exit $?
